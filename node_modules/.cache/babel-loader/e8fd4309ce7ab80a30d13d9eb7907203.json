{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ayush\\\\Desktop\\\\cognizant Work folder\\\\React application\\\\corporate-classifieds\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { createContext, useEffect, useState } from 'react';\n\nvar AuthContext = function AuthContext() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loggedIn = _useState2[0],\n      setloggedIn = _useState2[1];\n\n  if (localStorage.getItem(\"token\")) {\n    setloggedIn(true);\n  } else {\n    setloggedIn(false);\n  }\n}; // import axios from \"axios\"\n// const AuthContext=createContext()\n// axios.defaults.withCredentials=true\n// const AuthContextProvider = (props) => {\n//     const [loggedIn,setLoggedIn]=useState(false)\n//     async function getloggedin(){\n//         if(localStorage.getItem(\"token\"))\n//         {\n//             setLoggedIn(true);\n//         }\n//         else\n//         {\n//             setLoggedIn(false);\n//         }\n//     }\n//     useEffect(()=>{\n//         getloggedin()\n//     },[])\n//     return (\n//        <AuthContext.Provider value={{loggedIn,getloggedin}}>\n//         {props.children}   \n//        </AuthContext.Provider>\n//     )\n// }\n\n\nexport default AuthContext; // export {setloggedIn}\n// export {AuthContextProvider}","map":{"version":3,"names":["React","createContext","useEffect","useState","AuthContext","loggedIn","setloggedIn","localStorage","getItem"],"sources":["C:/Users/ayush/Desktop/cognizant Work folder/React application/corporate-classifieds/src/Components/AuthContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\r\nconst AuthContext=()=>{\r\n    const [loggedIn, setloggedIn] = useState(false);\r\n    if(localStorage.getItem(\"token\"))\r\n        {\r\n            setloggedIn(true);\r\n        }\r\n        else\r\n        {\r\n            setloggedIn(false);\r\n        }\r\n}\r\n// import axios from \"axios\"\r\n// const AuthContext=createContext()\r\n// axios.defaults.withCredentials=true\r\n// const AuthContextProvider = (props) => {\r\n//     const [loggedIn,setLoggedIn]=useState(false)\r\n//     async function getloggedin(){\r\n//         if(localStorage.getItem(\"token\"))\r\n//         {\r\n//             setLoggedIn(true);\r\n//         }\r\n//         else\r\n//         {\r\n//             setLoggedIn(false);\r\n//         }\r\n//     }\r\n//     useEffect(()=>{\r\n//         getloggedin()\r\n//     },[])\r\n//     return (\r\n//        <AuthContext.Provider value={{loggedIn,getloggedin}}>\r\n//         {props.children}   \r\n//        </AuthContext.Provider>\r\n//     )\r\n// }\r\n\r\nexport default AuthContext\r\n// export {setloggedIn}\r\n// export {AuthContextProvider} \r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;;AACA,IAAMC,WAAW,GAAC,SAAZA,WAAY,GAAI;EAAA,gBACcD,QAAQ,CAAC,KAAD,CADtB;EAAA;EAAA,IACXE,QADW;EAAA,IACDC,WADC;;EAElB,IAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EACI;IACIF,WAAW,CAAC,IAAD,CAAX;EACH,CAHL,MAKI;IACIA,WAAW,CAAC,KAAD,CAAX;EACH;AACR,CAVD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,WAAf,C,CACA;AACA"},"metadata":{},"sourceType":"module"}